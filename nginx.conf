
user nginx;
worker_processes auto;

error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;


events {
	worker_connections 1024;
}


http {
	include /etc/nginx/mime.types;
	default_type application/octet-stream;

	log_format main '$remote_addr - $remote_user [$time_local] "$request" '
	'$status $body_bytes_sent "$http_referer" '
	'"$http_user_agent" "$http_x_forwarded_for"';

	access_log /var/log/nginx/access.log main;

	sendfile on;
	#tcp_nopush     on;

	keepalive_timeout 65;

	#gzip  on;

	include /etc/nginx/conf.d/*.conf;
	server {
		listen 80;
		server_name flyto.co www.flyto.co ;
		# redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
		return 301 https://$host$request_uri;
	}
	server {
		listen 443 ssl; # HTTPS 需要使用的端口
		server_name flyto.co;
		#证书(公钥.发送到客户端的)
		ssl_certificate /etc/nginx/ssl/flyto_co.crt;
		ssl_certificate_key /etc/nginx/ssl/flyto_co.key; # 网站新私钥路径
		# redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
		return 301 https://www.flyto.co$request_uri;
	}
	server {
		listen 443 ssl; # HTTPS 需要使用的端口
		server_name www.flyto.co;
		#证书(公钥.发送到客户端的)
		ssl_certificate /etc/nginx/ssl/flyto_co.crt;
		ssl_certificate_key /etc/nginx/ssl/flyto_co.key; # 网站新私钥路径
		# 配置服务器可使用的加密算法
		ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE:ECDH:AES:HIGH:!NULL:!aNULL:!MD5:!ADH:!RC4:!DH:!DHE;
		# 指定服务器密码算法在优先于客户端密码算法时，使用 SSLv3 和 TLS 协议
		ssl_prefer_server_ciphers on;
		# ssl 版本 可用 SSLv2,SSLv3,TLSv1,TLSv1.1,TLSv1.2
		# ie6 只支持 SSLv2,SSLv3 但是存在安全问题, 故不支持
		ssl_protocols TLSv1 TLSv1.1 TLSv1.2;
		ssl_session_timeout 1d;
		ssl_session_cache shared:MozSSL:10m; # about 40000 sessions
		ssl_session_tickets off;
		# HSTS (ngx_http_headers_module is required) (63072000 seconds)
		add_header Strict-Transport-Security "max-age=63072000" always;
		# OCSP stapling
		ssl_stapling on;
		ssl_stapling_verify on;
		location / {
			proxy_pass http://43.155.84.114:32777;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header X-Forwarded-Host $host;
			proxy_set_header X-Forwarded-Port $server_port;
		}
	}
	# server {
	# 	listen 80; # HTTPS 需要使用的端口
	# 	server_name agricorehk.com;
	# 	# redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
	# 	return 301 http://www.agricorehk.com$request_ uri;
	# }
	server {
		listen 80;
		server_name agricorehk.com www.agricorehk.com;
		location / {
			proxy_pass http://43.155.84.114:32779;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header X-Forwarded-Host $host;
			proxy_set_header X-Forwarded-Port $server_port;
		}
	}
	# server {
	# 	listen 80; # HTTPS 需要使用的端口
	# 	server_name han.agricorehk.com;
	# 	# redirect all HTTP requests to HTTPS with a 301 Moved Permanently response.
	# 	return 301 http://www.han.agricorehk.com$request_uri;
	# }
	server {
		listen 80;
		server_name han.agricorehk.com;
		location / {
			proxy_pass http://43.155.84.114:32781;
			proxy_set_header Host $host;
			proxy_set_header X-Real-IP $remote_addr;
			proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
			proxy_set_header X-Forwarded-Proto $scheme;
			proxy_set_header X-Forwarded-Host $host;
			proxy_set_header X-Forwarded-Port $server_port;
		}
	}
}
